#!/bin/bash

if test -e /etc/xchroot.conf
	then source /etc/xchroot.conf
fi

if [[ "x${NAME}" = "x" ]];          then NAME=$(date +%F_%H-%M-%S_%N); fi
if [[ "x${BASEDIR}" = "x" ]];       then BASEDIR="/var/tmp/chroot"; fi
if [[ "x${CACHE_ROOT}" = "x" ]];    then CACHE_ROOT=""; fi
if [[ "x${SHELL}" = "x" ]];         then SHELL='/bin/zsh'; fi
if [[ "x${MOUNT_HOME}" = "x" ]];    then MOUNT_HOME=1; fi
if [[ "x${MOUNT_HOME_RO}" = "x" ]]; then MOUNT_HOME_RO=1; fi

#NAME=$(date +%F%N | md5sum -t | awk '{print $1}')

SQUASHFS=$1

SHELL="/bin/zsh"

if [ "$(id -u)" != "0" ]
then
	sudo $0 $1 $2 $3 $4 $5 $6 $7 $8 $9
	exit 0
fi

function CleanUp () {
	ERROR=$1

	trap "" 2

	echo -n "Killing proesses"
	while lsof ${CHROOT}
	do
		for pid in $(lsof ${CHROOT} | grep -v "^COMMAND" | awk '{print $2}' | uniq | sort )
		do
			echo -n '.'
			kill -9 $pid
		done
	done

	echo " "

	if [[ "${MOUNT_HOME}" = "1" ]]
		home="${BASEDIR}/isolate/${NAME}${HOME}"
		then until umount "${home}"; do sleep 5s; done && rm -fr "${home}"
	fi

	for path in "${BASEDIR}/isolate/${NAME}/dev/pts" "${BASEDIR}/isolate/${NAME}/sys" "${BASEDIR}/isolate/${NAME}/proc" "${BASEDIR}/isolate/${NAME}/dev"
		do until umount ${path}; do sleep 1s; done
	done

	FILENAME=${SQUASHFS##*/}
	FILENAME=${FILENAME%.*}_${NAME}.squashfs

	if [[ "x${ERROR}" = "x" ]];
		then read -p "Save changes to \"${FILENAME}\" (Y/N) " -n 1 -r
			if [[ $REPLY =~ ^[Yy]$ ]]
				then
					WD=$(pwd)
					cd ${BASEDIR}/isolate/${NAME} > /dev/null
					mksquashfs ./ ${WD}/${FILENAME} -comp xz
					cd - > /dev/null
			fi

		else echo "Cleanup because error: \"${ERROR}\""
	fi

	for path in "${BASEDIR}/isolate/${NAME}" "${BASEDIR}/tmpfs/${NAME}" "${BASEDIR}/chroots/${NAME}"
		do umount ${path}

		if [[ "${path}" = "${BASEDIR}/tmpfs/${NAME}" ]]
			then if [[ "x${CACHE_ROOT}" != "x" ]]
				then rm -fr "${CACHE_ROOT}/chroot_${NAME}"
			fi
		fi
	done

	for path in isolate tmpfs chroots
		do rm -fr ${BASEDIR}/${path}/${NAME}
	done

	trap 2
	if [[ "x${ERROR}" = "x" ]]
		then exit 0
		else exit 1
	fi
}

if [[ "x$1" = "x" ]]
    then
        echo "Argument required"
        echo ""
        echo "Usage $0 systemimage.squashfs"
        echo ""
        exit 1
fi

mkdir -p ${BASEDIR}/{isolate,tmpfs,chroots}/${NAME}
mount -o loop,ro ${SQUASHFS} ${BASEDIR}/chroots/${NAME} || exit 1

if [[ "x${CACHE_ROOT}" = "x" ]]
	then mount -t tmpfs -o size=50% none ${BASEDIR}/tmpfs/${NAME} || CleanUp "Can't create tmpfs"
	else mkdir -p "${CACHE_ROOT}/chroot_${NAME}" || CleanUp "Can't create dir ${CACHE_ROOT}/chroot_${NAME}"
		 mount -o bind "${CACHE_ROOT}/chroot_${NAME}" ${BASEDIR}/tmpfs/${NAME} || CleanUp "Can't bind cache dir"
fi

mkdir -p ${BASEDIR}/tmpfs/${NAME}/{root,dev}
mount -t aufs -o br:${BASEDIR}/tmpfs/${NAME}/root=rw:${BASEDIR}/chroots/${NAME}=ro none ${BASEDIR}/isolate/${NAME} || CleanUp "Can't mount aufs, see dmesg"

mount -t proc none ${BASEDIR}/isolate/${NAME}/proc || CleanUp "Can't mount procfs"
mount -t sysfs  none ${BASEDIR}/isolate/${NAME}/sys || CleanUp "Can't mount sysfs"
mount -t aufs -o br:${BASEDIR}/tmpfs/${NAME}/dev=rw:/dev=ro none ${BASEDIR}/isolate/${NAME}/dev || CleanUp "Can't mount aufs, see dmesg"
mount -t devpts devpts ${BASEDIR}/isolate/${NAME}/dev/pts || CleanUp "Can't mount /dev/pts"

if [[ "${MOUNT_HOME}" = "1" ]]
	then mkdir -p ${BASEDIR}/isolate/${NAME}${HOME}
		mount -o bind ${HOME} ${BASEDIR}/isolate/${NAME}${HOME}
fi

if [[ "${MOUNT_HOME_RO}" = "1" ]]
	then mount -o remount,ro ${BASEDIR}/isolate/${NAME}${HOME}
fi

CHROOT=${BASEDIR}/isolate/${NAME}

if test -x ${CHROOT}${SHELL}
	then :;
	else SHELL="/bin/sh"
fi

echo "Set SHELL=${SHELL}"
chroot ${CHROOT} /usr/bin/env SHELL=${SHELL} HOME=/root PS1="(CHROOT) ${PS1}" ${SHELL} --login +h || CleanUp "Can't chroot... What a hell?"

CleanUp
